package view;

import controller.LibrarianController;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import model.Book;

/**
 *
 * @author adkm2
 */
public class FilterForm extends javax.swing.JFrame {
    private LibrarianController librarianController = new LibrarianController();
    private LibrarianForm librarianForm;
    private ReaderForm readerForm;
    /**
     * Creates new form FilterForm
     */
    public FilterForm(LibrarianForm librarianForm) {
        this.librarianForm = librarianForm;
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Filter");
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    public FilterForm(ReaderForm readerForm) {
        this.readerForm = readerForm;
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Filter");
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fictionCB = new javax.swing.JCheckBox();
        dystopianCB = new javax.swing.JCheckBox();
        fantasyCB = new javax.swing.JCheckBox();
        scificCB = new javax.swing.JCheckBox();
        techCB = new javax.swing.JCheckBox();
        horrorCB = new javax.swing.JCheckBox();
        genreLabel = new javax.swing.JLabel();
        authorLabel = new javax.swing.JLabel();
        titleTF = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        authorTF = new javax.swing.JTextField();
        okBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fictionCB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fictionCB.setText("Fiction");
        fictionCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fictionCBActionPerformed(evt);
            }
        });

        dystopianCB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        dystopianCB.setText("Dystopian");

        fantasyCB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fantasyCB.setText("Fantasy");

        scificCB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        scificCB.setText("Science Fic");

        techCB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        techCB.setText("Tech");

        horrorCB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        horrorCB.setText("Horror");

        genreLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        genreLabel.setText("Genre:");

        authorLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        authorLabel.setText("Author:");

        titleTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                titleTFKeyPressed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titleLabel.setText("Title:");

        authorTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                authorTFKeyPressed(evt);
            }
        });

        okBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        okBtn.setText("OK");
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(fantasyCB, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dystopianCB)
                                .addComponent(fictionCB, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(backBtn))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(horrorCB)
                            .addComponent(scificCB)
                            .addComponent(techCB)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(okBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(genreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(authorLabel)
                        .addComponent(titleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(titleLabel)
                        .addComponent(authorTF, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(titleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(authorLabel)
                .addGap(18, 18, 18)
                .addComponent(authorTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(genreLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fictionCB)
                    .addComponent(horrorCB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dystopianCB)
                    .addComponent(scificCB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fantasyCB)
                    .addComponent(techCB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fictionCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fictionCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fictionCBActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        // TODO add your handling code here:
        try {
            String title = titleTF.getText().trim();
            String author = authorTF.getText().trim();

            // Lấy danh sách thể loại đã chọn
            List<String> genres = new ArrayList<>();
            if (fictionCB.isSelected()) genres.add("Fiction");
            if (dystopianCB.isSelected()) genres.add("Dystopian");
            if (fantasyCB.isSelected()) genres.add("Fantasy");
            if (scificCB.isSelected()) genres.add("Science Fiction");
            if (techCB.isSelected()) genres.add("Tech");
            if (horrorCB.isSelected()) genres.add("Horror");

            // Gọi phương thức từ LibrarianController để lấy danh sách sách
            List<Book> books = librarianController.getBooksByFilter(title, author, genres);

            // Cập nhật bảng trong LibrarianForm
            if (librarianForm != null)
                librarianForm.updateBookTable(books); 
            else readerForm.updateBookTable(books);
            

            // Đóng FilterForm
            this.dispose();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_okBtnActionPerformed

    private void titleTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleTFKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) 
            okBtn.doClick();
    }//GEN-LAST:event_titleTFKeyPressed

    private void authorTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_authorTFKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) 
            okBtn.doClick();
    }//GEN-LAST:event_authorTFKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorLabel;
    private javax.swing.JTextField authorTF;
    private javax.swing.JButton backBtn;
    private javax.swing.JCheckBox dystopianCB;
    private javax.swing.JCheckBox fantasyCB;
    private javax.swing.JCheckBox fictionCB;
    private javax.swing.JLabel genreLabel;
    private javax.swing.JCheckBox horrorCB;
    private javax.swing.JButton okBtn;
    private javax.swing.JCheckBox scificCB;
    private javax.swing.JCheckBox techCB;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTF;
    // End of variables declaration//GEN-END:variables
}
