package view;

import controller.BorrowController;
import controller.LibrarianController;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author adkm2
 */
public class ToBorrowBookForm extends javax.swing.JFrame {
    private int userID; 
    private BorrowController borrowController = new BorrowController();
    private ReaderForm readerForm = new ReaderForm();
    private LibrarianController librarianController = new LibrarianController();
    
    /**
     * Creates new form ToBorrowBook
     */
    public ToBorrowBookForm(int userID) {
        initComponents();
        this.userID = userID;
        this.setTxtDate();
        this.setLocationRelativeTo(null);
        this.setTitle("Borrow Book");
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        titleTF = new javax.swing.JTextField();
        dateLabel = new javax.swing.JLabel();
        borrowBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        txtDate = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        titleLabel.setText("Title:");

        titleTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleTFActionPerformed(evt);
            }
        });
        titleTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                titleTFKeyPressed(evt);
            }
        });

        dateLabel.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        dateLabel.setText("Date Return:");

        borrowBtn.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        borrowBtn.setText("Borrow");
        borrowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowBtnActionPerformed(evt);
            }
        });
        borrowBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                borrowBtnKeyPressed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        txtDate.setDateFormatString("yyyy-MM-dd");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel1.setText("*must be return in 2 weeks");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(titleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(41, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(borrowBtn)
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(borrowBtn)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void titleTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleTFActionPerformed

    private void borrowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowBtnActionPerformed
        // TODO add your handling code here:
        String title = titleTF.getText().trim();

        if (title.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a book title.");
            return;
        }

        try {
            // Lấy BookID từ tiêu đề sách
            int bookID = borrowController.getBookIDByTitle(title);
            if (bookID == -1) {
                JOptionPane.showMessageDialog(this, "Book not found.");
                return;
            }

            // Kiểm tra số lượng sách còn lại (Available)
            int available = borrowController.getAvailableByBookID(bookID);
            if (available <= 0) {
                JOptionPane.showMessageDialog(this, "This book currently is not available for borrwing.");
                return;
            }

            // Kiểm tra xem sách đã được mượn bởi người dùng hay chưa
            int numBorrow = borrowController.CountReturnedBooks(userID, bookID);
            int numReturned = borrowController.countReturnedBooksByDate(userID, bookID);
            if (numBorrow > numReturned) {
                JOptionPane.showMessageDialog(this, "You have already borrowed this book.");
                return;
            }

            // Lấy ngày trả từ txtDate
            java.util.Date utilReturnDate = txtDate.getDate();
            if (utilReturnDate == null) {
                JOptionPane.showMessageDialog(this, "Please select a valid return date.");
                return;
            }
            java.sql.Date returnDate = new java.sql.Date(utilReturnDate.getTime());

            // Gọi BorrowController để thêm dòng vào bảng BorrowedBooks
            if (borrowController.borrowBook(userID, title, returnDate)) {
                JOptionPane.showMessageDialog(this, "Book borrowed successfully!");
                this.dispose(); // Đóng form sau khi mượn sách thành công
            } else {
                JOptionPane.showMessageDialog(this, "Failed to borrow book. Please check the title.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    
    }//GEN-LAST:event_borrowBtnActionPerformed

    //Limit date selection
    private void setTxtDate() {
        java.util.Date today = new java.util.Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(today);

        calendar.add(Calendar.DAY_OF_MONTH, 1);
        java.util.Date min = calendar.getTime();

        calendar.add(Calendar.DAY_OF_MONTH, 13); 
        java.util.Date max = calendar.getTime();

        txtDate.setMinSelectableDate(min);
        txtDate.setMaxSelectableDate(max);
    }

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void borrowBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_borrowBtnKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) 
            borrowBtn.doClick();
    }//GEN-LAST:event_borrowBtnKeyPressed

    private void titleTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleTFKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) 
            borrowBtn.doClick();
    }//GEN-LAST:event_titleTFKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton borrowBtn;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTF;
    private com.toedter.calendar.JDateChooser txtDate;
    // End of variables declaration//GEN-END:variables
}
